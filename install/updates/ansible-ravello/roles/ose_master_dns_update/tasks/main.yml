---
- name: replace master public url
  replace: 
    dest: "{{ master_config }}"
    regexp: "masterPublicURL: {{ original.master_url }}"
    replace: "masterPublicURL: {{ new.master_url }}"
    
- name: replace public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  publicURL: '
    line: '  publicURL: {{ new.master_url }}:8443/console/'
    
- name: asset public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  assetPublicURL: '
    line: '  assetPublicURL: {{ new.master_url }}:8443/console/'   
    
- name: logging public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  loggingPublicURL: '
    line: '  loggingPublicURL: {{ new.logging_url }}'  
    
- name: metrics public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  metricsPublicURL: '
    line: '  metricsPublicURL: {{ new.metrics_url }}'    
           
- name: replace subdomain
  lineinfile: 
    dest: "{{ master_config }}"
    insertafter: '^routingConfig:'
    regexp: ' subdomain: '
    line: '  subdomain: {{ new_wildcard_fqdn }}' 
    
- name: replace corsAllowedOrigins
  lineinfile:
    dest: "{{ master_config }}"
    insertafter: "^corsAllowedOrigins:"
    line: '  - {{ app_name.master }}.{{ subdomain }}.{{ domain }}' 
  
- name: switch to correct context
  command: "oc config use-context {{ default_context }}"
  
- name: switch to project openshift-infra
  command: "oc project openshift-infra"        

- name: update hawkular metrics route
  command: oc patch route hawkular-metrics -p '{"spec":{"host":"{{ app_name.metrics }}.{{ new_wildcard_fqdn }}"}}"'

- name: switch to logging project
  command: "oc project logging"       

- name: update kibana logging route
  command: oc patch route kibana -p '{"spec":{"host":"kibana.{{ new_wildcard_fqdn }}"}}'

- name: update kibaba-proxy oauth redirects
  command: oc patch oauthclient kibana-proxy -p '{"redirectURIs":["https://{{ app_name.kibana }}.{{ new_wildcard_fqdn }}","https://kibana-ops.example.com"]}'

- name: extract dc logging-kibana to yaml
  shell: oc get dc/logging-kibana -o yaml > /root/dc-logging-kibana.yml

- name: edit dc logging-kibana yaml
  replace:
    dest: /root/dc-logging-kibana.yml
    regexp: '{{ old_master_app_name }}.{{ old_subdomain }}.{{ old_domain }}'
    replace: '{{ app_name.master }}.{{ subdomain }}.{{ domain }}'

- name: replace dc logging kibana with yaml
  shell: "cat /root/dc-logging-kibana.yml | oc replace -f -"

- name: switch to ci project
  command: "oc project ci"  
  when: ci_enabled     

- name: update ci gogs route
  command: oc patch route gogs -p '{"spec":{"host":"gogs-ci.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled     

- name: update ci jenkins route
  command: oc patch route jenkins -p '{"spec":{"host":"jenkins-ci.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled     

- name: update ci nexus route
  command: oc patch route nexus -p '{"spec":{"host":"nexus-ci.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled     

- name: switch to api-app-dev project
  command: "oc project api-app-dev"  
  when: ci_enabled

- name: update ose-api-app route
  command: oc patch route ose-api-app -p '{"spec":{"host":"ose-api-app-api-app-dev.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled 

- name: switch to api-app-uat project
  command: "oc project api-app-uat"  
  when: ci_enabled

- name: update ose-api-app route
  command: oc patch route ose-api-app -p '{"spec":{"host":"ose-api-app-api-app-uat.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled 

- name: switch to api-app-prod project
  command: "oc project api-app-prod"  
  when: ci_enabled

- name: update ose-api-app route
  command: oc patch route ose-api-app -p '{"spec":{"host":"ose-api-app-api-app-prod.{{ new_wildcard_fqdn }}"}}'
  when: ci_enabled 
  
# need to restart because of some issue with atomic and possibly with hostname, other nodes recover    
- name: restart atomic openshift
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - atomic-openshift-master
    - atomic-openshift-node
  tags:
    - update_dns

#  handlers:
#    - name: restart atomic-openshift-master
#      service:
#        name: atomic-openshift-master
#        state: restarted    